# Generated by Django 3.1.4 on 2021-01-31 14:03

import blog.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('status', models.CharField(choices=[('dormant', 'dormant'), ('offline', 'offline'), ('online', 'online')], default='offline', max_length=10)),
                ('banner', models.ImageField(blank=True, default='', storage=blog.models.MyFileSystemStorage('images/banners/'), upload_to='images/banners/')),
                ('description', models.CharField(max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_post', models.DateTimeField(null=True)),
                ('one_comment', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=28, unique=True)),
                ('pin', models.CharField(max_length=6)),
                ('last_visit', models.DateTimeField(auto_now=True)),
                ('avatar', models.ImageField(default='SeekPng.com_avatar-png_1150362.png', storage=blog.models.MyFileSystemStorage('images/avatars/'), upload_to='images/avatars/')),
            ],
            options={
                'ordering': ('-last_visit',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.ImageField(blank=True, storage=blog.models.MyFileSystemStorage('images/banners/'), upload_to='images/banners/')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250, unique_for_date='publish')),
                ('body', models.TextField()),
                ('publish', models.DateTimeField(default=django.utils.timezone.now)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'draft'), ('published', 'published'), ('deleted', 'deleted')], default='draft', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='blog.blog')),
            ],
            options={
                'ordering': ('-publish',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('body', models.CharField(max_length=300)),
                ('fans', models.ManyToManyField(blank=True, related_name='comments_liked', to='blog.Visitor')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.visitor')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
